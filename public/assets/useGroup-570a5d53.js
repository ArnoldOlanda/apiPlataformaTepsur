import{t as l,e as K,r as i,g as E,f as V,s as f,o as h,ai as y,aj as c,ae as g,ak as W,al as X,am as Y}from"./index-b05c3593.js";import{g as Z}from"./schedule.service-5bfabb81.js";import{g as tt}from"./teacher.service-ca2ba6d0.js";import{g as et}from"./GlobalAlerts-e291f7f6.js";import{g as st}from"./careers.service-c54b684b.js";const rt=async({token:n,anio:s,mes:r})=>{try{return(await l.get(`/group?year=${s}&month=${r+1}`,{headers:{"x-token":n}})).data}catch(o){throw o}},at=async({token:n,anio:s,mes:r},o)=>{try{return(await l.get(`/group/list-by-secretary/${o}?year=${s}&month=${r+1}`,{headers:{"x-token":n}})).data}catch(p){throw p}},ot=async(n,s)=>{try{return(await l.get(`/group/find-by-uuid/${s}`,{headers:{"x-token":n}})).data}catch(r){throw r}},nt=async(n,s)=>{try{return(await l.put(`/group/close-group/${s}`,{},{headers:{"x-token":n}})).data}catch(r){throw r}},ct=async({token:n,nombre:s,fechaInicio:r,horarioUuid:o,carreraUuid:p,docenteUuid:m,cuposMaximos:U,moduloUuid:G,sedeUuid:L,responsableUuid:w,modalidad:b})=>{try{return(await l.post("/group",{nombre:s,fechaInicio:r,sedeUuid:L,horarioUuid:o,carreraUuid:p,moduloUuid:G,docenteUuid:m,responsableUuid:w,cuposMaximos:U,modalidad:b},{headers:{"x-token":n}})).data}catch(v){throw v}},ut=async(n,s)=>{try{return(await l.get(`/group/students/${s}`,{headers:{"x-token":n}})).data}catch(r){throw r}},dt=async(n,s,r)=>{try{return(await l.patch("/group/remove-student",{matriculaUuid:s,grupoUuid:r},{headers:{"x-token":n}})).data}catch(o){throw o}},it=async(n,s,r,o)=>{try{return(await l.patch("/group/add-student",{secretariaUuid:o,matriculasUuid:s,grupoUuid:r},{headers:{"x-token":n}})).data}catch(p){throw p}},Ot=(n={})=>{const s=K(),[r,o]=i.useState(n),[p,m]=i.useState([]),[U,G]=i.useState([]),[L,w]=i.useState([]),[b,v]=i.useState([]),[C,M]=i.useState(null),[T,$]=i.useState([]),[A,B]=i.useState([]),[I,S]=i.useState(!1),{grados:P,departamentos:O,secretarias:R,sedes:Q}=E(e=>e.utilities),{token:u}=E(e=>e.user),[F,j]=i.useState([]),[N,_]=i.useState([]),{createAlert:k,customAlert:x,deleteAlert:q}=et(),[D,z]=i.useState([]),H=V();return{...r,formState:r,setFormState:o,onInputChange:({target:e})=>{const{name:t,value:a}=e;o({...r,[t]:a})},onResetForm:()=>{o({...n,token:u,grupoOrigen:r.grupoOrigen,grupoUuid:r.grupoUuid,responsableUuid:r.responsableUuid})},onSubmit:async(e,t)=>{e.preventDefault();const a={token:u,nombre:r.name,fechaInicio:new Date(r.fechaInicio),horarioUuid:r.horario,carreraUuid:r.carrer,docenteUuid:r.docente,cuposMaximos:r.cupos,moduloUuid:r.moduloUuid,sedeUuid:r.sedeUuid,responsableUuid:r.responsableUuid,modalidad:r.modalidad};k("este grupo","Grupo Registrado",async()=>{try{s(f());const d=await ct(a);m([...p,d]),s(h())}catch(d){throw d}},t)},getListGroups:async()=>{try{s(y());const e=await rt({...r,token:u});m(e||[]),s(c())}catch(e){g(e),s(c())}},setGroups:m,groups:p,carreras:D,getListCareers:async()=>{try{s(y());const e=await st(u,r.sede);return z(e),s(c()),e}catch(e){s(c()),g(e)}},getListSchedules:async e=>{try{s(y());const t=await Z(u,e);return j(t||[]),s(c()),t||[]}catch(t){g(t),s(c())}},schedules:F,getListTeachers:async()=>{try{s(y());const e=await tt({...r,token:u});return _(e||[]),s(c()),e||[]}catch(e){g(e),s(c())}},teachers:N,getDataGroup:async e=>{try{s(y());const t=await ot(u,e);return M(t||null),w(t.students),o({...r,grupoOrigen:t.uuid,grupoUuid:t.uuid,responsableUuid:t.secretaria.uuid}),s(c()),t}catch{return M(-1),s(c()),null}},group:C,getModules:e=>{try{const t=D.find(a=>a.uuid==e).modulos;return G(t||[]),t}catch(t){s(c()),g(t)}},modules:U,addStudent:async(e,t)=>{k("este alumno a este grupo","Alumno Registrado",async()=>{try{s(f());const a=await it(u,[{matriculaUuid:e,observaciones:r.observacion}],r.grupoUuid,r.responsableUuid);w(a),s(h())}catch(a){throw a}},t)},departamentos:O,distritos:A,provincias:T,getListDistritos:async(e,t)=>{try{S(!0);const a=await X(u,e,t);return B(a),S(!1),a}catch(a){s(c()),g(a),S(!1)}},getListProvincias:async e=>{try{S(!0);const t=await W(u,e);return $(t),S(!1),t}catch(t){s(c()),g(t),S(!1)}},editModule:(e,t)=>{const a=r.modulos.map(d=>d.uuid==e?{...d,...t}:d);o({...r,modulos:a})},addModule:e=>{o({...r,modulos:[...r.modulos,e]})},delModule:e=>{o({...r,modulos:[...r.modulos.filter(t=>t.uuid!==e)]})},grados:P,loading:I,onTraslado:async(e,t)=>{e.preventDefault(),x("¿Estas seguro de trasladar este alumno?","Alumno Trasladado",async()=>{try{const a=[];r.modulos.forEach((d,J)=>{a.push({orden:J+1,nombre:d.nombre,duracionSemanas:d.duracion_semanas})}),s(f()),s(h())}catch(a){throw a}},t)},secretarias:R,getListStudents:async e=>{try{s(y());const t=await ut(u,e);return w(t||[]),s(c()),t||[]}catch(t){g(t),s(c())}},students:L,sedes:Q,getListByQuery:async e=>{try{s(f());const t=await Y(u,e);return s(h()),t}catch(t){s(h()),g(t)}},onCloseGroup:async()=>{x("¿Estas seguro de cerrar este grupo?","Grupo cerrado",async()=>{try{s(f()),await nt(u,r.grupoUuid),s(h()),H("/home/grupo")}catch(e){throw e}},()=>{})},getListGroupsBySecre:async e=>{try{s(y());const t=await at({...r,token:u},e);m(t||[]),s(c())}catch(t){g(t),s(c())}},OndeleteStudent:async(e,t)=>{q("este Estudiante","Estudiante Eliminado",async()=>{try{s(f());const a=await dt(u,e,r.grupoUuid);w([...L.filter(d=>d.matriculaGrupo.matricula.uuid!==e)]),s(h())}catch(a){throw a}},t)},payments:b}};export{Ot as u};
